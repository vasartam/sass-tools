/// linear-interpolation
/// Calculate the definition of a line between two points
/// @param $map - A SASS map of viewport widths and size value pairs
/// @returns A linear equation as a calc() function
/// @example
///   font-size: linear-interpolation((320px: 18px, 768px: 26px));
/// @author Jake Wilson <jake.e.wilson@gmail.com>
///
/// https://gist.github.com/Jakobud/7414f91142e0f540f221a3e3cafdf856
///
/// Modified by Vasiliy Artamonov 06.09.2020
@function linear-interpolation($map) {
  $keys: map-keys($map);
  @if (length($keys) != 2) {
    @error "linear-interpolation() $map must be exactly 2 values";
  }

  $value_1: map-get($map, nth($keys, 1));
  $value_2: map-get($map, nth($keys, 2));
  $result: ();

  @if type_of($value_1) == "list" and type_of($value_2) == "list" {
    $leave_alone_properties: ();
    $leave_alone_indices: ();

    @for $i from 1 through length($value_1) {
      $list_1_item: nth($value_1, $i);
      $list_2_item: nth($value_2, $i);

      @if $list_1_item == $list_2_item {
        $leave_alone_properties: append($leave_alone_properties, $list_1_item);
        $leave_alone_indices: append($leave_alone_indices, $i);
      }
    }

    //@debug $leave_alone_properties;
    //@debug $leave_alone_indices;
    //@debug $leave_alone_properties, 1;
    //@error '';
    $j: 1;

    @for $i from 1 through length($value_1) {
      @if index($leave_alone_indices, $i) != null and $leave_alone_indices != $i {
        //@debug 'Skipping index: ', $i;
        $result: append($result, #{nth($leave_alone_properties, $j)});
        $j: $j + 1;
      } @else {
        $list_1_item: nth($value_1, $i);
        $list_2_item: nth($value_2, $i);

        // The slope
        $m: ($list_2_item - $list_1_item)/(nth($keys, 2) - nth($keys, 1));

        // The y-intercept
        $b: $list_1_item - $m * nth($keys, 1);

        // Determine if the sign should be positive or negative
        $sign: "+";
        @if ($b < 0) {
          $sign: "-";
          $b: abs($b);
        }

        $calc: #{$m*100}vw #{$sign} #{$b};
        $result: append($result, calc(#{$calc}));
      }
    }
  } @else {
    // The slope
    $m: ($value_2 - $value_1)/(nth($keys, 2) - nth($keys,1));

    // The y-intercept
    $b: $value_1 - $m * nth($keys, 1);

    // Determine if the sign should be positive or negative
    $sign: "+";
    @if ($b < 0) {
      $sign: "-";
      $b: abs($b);
    }

    $calc: #{$m*100}vw #{$sign} #{$b};
    $result: calc(#{$calc});
  }

  @return $result;
}
